<<<<<<< HEAD
﻿@model WaffleOffer.Models.Item

@*@{
<<<<<<< HEAD
    ViewBag.Title = "Create new item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Item:</h2>
*@

@* New code *@
@{   
    ViewBag.Title = "Add Good or Service";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    @using (Html.BeginForm("Create", "Items", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
            @*<h4>Add A New Item</h4>
        <hr />*@

            <h4 class="dark-heading">Add New Item</h4>
            @* new code *@
            @Html.ValidationSummary(true)

            @Html.Hidden("ListingType")
            @Html.Hidden("ListingUser")

            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "material-input" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "materialize-textarea", @rows = "5", @cols = "20" })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quality, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="range" id="qualitySlider" name="Quality" min="1" max="5" onchange="$('#rangeValue').html($(this).val());" />
                    <span id="rangeValue" class="extra-padding-1"></span>
                    @Html.ValidationMessageFor(model => model.Quality)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Units, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Units, new { @class = "material-input" })
                    @Html.ValidationMessageFor(model => model.Units)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    <input type="number" name="Quantity" class="material-input" min="1"/>
                    @Html.ValidationMessageFor(model => model.Quantity)
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Images", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <span class="btn btn-file">
                        Browse <input type="file" id="Images" name="upload" onchange="$('#fileSelected').html($(this).val());" />
                    </span>
                    <span id="fileSelected" class="extra-margin-1"></span>
                    @Html.ValidationMessageFor(model => model.Images)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add" class="btn btn-custom-submit" />
                </div>
            </div>
        </div>
}

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class="btn btn-sm btn-custom-grey" })
    </div>

    @section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    }
=======
﻿@model WaffleOffer.Models.Item

@*@{
<<<<<<< HEAD
    ViewBag.Title = "Create new item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Item:</h2>
*@

@* New code *@
@{   
    ViewBag.Title = "Add Good or Service";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Items", null, FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>Add A New Item</h4>
        <hr />*@

        <h4 class="dark-heading">Add New Item</h4>
        @* new code *@
        @Html.ValidationSummary(true)

        @Html.Hidden("ListingType")
        @Html.Hidden("ListingUser")

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "material-input" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "materialize-textarea", @rows = "5", @cols = "20" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quality, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Quality, new { @class = "material-input" })
                @Html.ValidationMessageFor(model => model.Quality)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Units, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Units, new { @class = "material-input" })
                @Html.ValidationMessageFor(model => model.Units)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Quantity, new { @class = "material-input" })
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Images", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="btn btn-file">
                    Browse <input type="file" id="Images" name="upload" />
                </span>
                @Html.ValidationMessageFor(model => model.Images)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-custom-submit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class="btn btn-sm btn-custom-grey" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
>>>>>>> master
