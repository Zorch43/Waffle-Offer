@model IEnumerable<WaffleOffer.Models.MessageViewModel>

@{
    ViewBag.Title = "View Message";
    int counter = 0;
}
<h4 class="dark-heading">View Message</h4>
<p>
    <div class="btn-group">
        <button type="button" class="btn btn-sm btn-custom-grey dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Go <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li>@Html.ActionLink("Inbox", "Inbox")</li>
            <li>@Html.ActionLink("Sent Messages","Sent")</li>
            <li>@Html.ActionLink("My Profile", "Index", "Profile")</li>
        </ul>
    </div>
</p>
<div class="panel-group" id="accordion">
@foreach (var item in Model)
{
    string panelId = "collapse" + counter;
    string toggleId = "#" + panelId;
      
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="panel-title">
                <a data-toggle="collapse" href="@toggleId">
                    @Html.HiddenFor(modelItem => item.ThreadID)
                    @Html.HiddenFor(modelItem => item.IsReply)
                    @Html.HiddenFor(modelItem => item.HasReply)

                    @if (User.Identity.Name == item.SenderItem.UserName)
                    {
                        @Html.HiddenFor(modelItem => item.SenderItem.UserName)
                    }
                    else
                    {
                        <span class="msg-label">Sender: &nbsp;</span> @Html.DisplayFor(modelItem => item.SenderItem.UserName)<br />
                    }
                    
                    @if (User.Identity.Name == item.RecipientItem.UserName)
                    {
                        @Html.HiddenFor(modelItem => item.RecipientItem.UserName)
                    }
                    else
                    {
                        <span class="msg-label">Recipient: &nbsp;</span> @Html.DisplayFor(modelItem => item.RecipientItem.UserName)<br />
                    }
                    
                    <span class="msg-label">Sent: &nbsp;</span> @Html.DisplayFor(modelItem => item.DateSent)<br />
                    <span class="msg-label">Subject: &nbsp;</span> @Html.DisplayFor(modelItem => item.Subject)<br />
                    <i class="material-icons">expand_more</i>
                </a>
            </div>
        </div>
        @if (panelId == ViewBag.LatestMessagePanelID) {
            <div id="@panelId" class="panel-collapse collapse in">
                <div class="panel-body">
                    @Html.DisplayFor(modelItem => item.Body) <br />
                    @if (item.ReportType == "Item")
                    {
                        @Html.ActionLink("View Reported Item", "Details", "Items", new { id = item.ReportedObject }, new { @class = "btn btn-sm btn-custom-grey" })
                    }
                    else if (item.ReportType == "Profile")
                    {
                        @Html.ActionLink("View Reported Profile", "Index", "Profile", new { userName = item.ReportedObject }, new { @class = "btn btn-sm btn-custom-grey" })
                    }
                    else if (item.ReportType == "Trade")
                    {
                        @Html.ActionLink("View Reported Trade", "Index", "Trade", new { tradeId = item.ReportedObject }, new { @class = "btn btn-sm btn-custom-grey" })
                    }
                    @if (User.Identity.Name == item.RecipientItem.UserName && item.HasReply == false)
                    {
                        @Html.ActionLink("Reply", "Compose", new { recipientUsername = item.SenderItem.UserName, isReply = true, threadId = item.ThreadID }, new { @class = "btn btn-sm btn-custom-grey", @title = "Reply" })
                    }
                </div>
            </div>
        }
        <div id="@panelId" class="panel-collapse collapse">
            <div class="panel-body">
                @Html.DisplayFor(modelItem => item.Body) <br />
                @if (User.Identity.Name == item.RecipientItem.UserName)
                {
                  @Html.ActionLink("Reply", "Compose", new { recipientUsername = item.SenderItem.UserName, isReply = true, threadId = item.ThreadID }, new { @class = "btn btn-sm btn-custom-grey", @title = "Reply" })
                }
            </div>
        </div>
    </div>
    counter++;
}
</div>

