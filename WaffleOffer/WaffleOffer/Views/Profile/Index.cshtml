@model WaffleOffer.Models.ProfileViewModel

@{
    ViewBag.Title = "Profile";
}

<h4 class="dark-heading">&nbsp;</h4>
<div class="top-space">
    <div class="row">
        <div class="col-md-4">
            <figure>
                <!-- profile img or placeholder avatar goes here-->
                <img src="../Images/wo-temp-avatar-1.png" class="profile-pic" />
                <!-- commented out until I can fix the garbage-looking alignment -->
                <!--<figcaption class="profile-caption">-->@*@Html.DisplayFor(model => model.Nickname)*@ <!--</figcaption>-->
            </figure>
            @*Only other traders should be able to see this*@
            @if (User.Identity.Name != Model.Nickname)
            {
                <div class="col-md-offset-1">
                    @Html.ActionLink("Send Message", "Compose", "Messages", new { recipientUsername = Model.Nickname }, new { @class="btn btn-sm btn-custom-grey" })
                </div>
            }
        </div>
        <div class="col-md-8">
            <h5>About @Html.DisplayFor(model => model.Nickname)</h5>
            <p>
                @Html.DisplayFor(model => model.ProfileText)
                Lorem ipsum whateverum until there is some profile text or some placeholder
                something or other. Whatever. Lorem. Ipsum. Etcetera. Rosa rosae rosae rosam 
                rosa (with a flat little hat) rosa.
            </p>
            <p>
                <strong>@Html.DisplayNameFor(model => model.ZipCode):</strong> @Html.DisplayFor(model => model.ZipCode)
            </p>
            @*Authorized viewers only*@
            @if (User.Identity.Name == Model.Nickname || User.IsInRole("Admin"))
            {
                <p>
                    <strong>@Html.DisplayNameFor(model => model.RealName):</strong> @Html.DisplayFor(model => model.RealName)
                </p>
                <p>
                    <strong>@Html.DisplayNameFor(model => model.Email):</strong> @Html.DisplayFor(model => model.Email)
                </p>
            }
        </div>
    </div>

    @* Dashboard only visible to the user or an admin *@
    @if (User.Identity.Name == Model.Nickname || User.IsInRole("Admin")) 
    { 
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-4">
            <a href="@Url.Action("Edit", "Profile", new { userName = Model.Nickname })">
                <div class="card custom-card-short-grey hoverable">
                    <h5 class="custom-card-short-heading"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>&nbsp;Edit Profile</h5>
                </div>
            </a>          
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4">
            <a href="@Url.Action("Create", "Items", new { type = "Have" })">
                <div class="card custom-card-short-grey hoverable">
                    <h5 class="custom-card-short-heading"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span>&nbsp;Add a New Have</h5>
                </div>
            </a>  
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4">
            <a href="@Url.Action("Create", "Items", new { type = "Want" })">
                <div class="card custom-card-short-grey hoverable">
                    <h5 class="custom-card-short-heading"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span>&nbsp;Add a New Want</h5>
                </div>
            </a>
        </div>  
        <div class="col-xs-12 col-sm-6 col-md-4">
            <a href="@Url.Action("Inbox","Messages")">
                <div class="card custom-card-blue hoverable animated slideInLeft">
                    <h4 class="custom-card-heading">Messages</h4>
                    <p class="custom-card-content-center"><i class="material-icons custom-card-icon">mail_outline</i></p>
                </div>
            </a>
        </div>     
        <div class="col-xs-12 col-sm-6 col-md-4">
            <a href="@Url.Action("Items", "Items", new { userName = Model.Nickname, type= "Have" })">
                <div class="card custom-card-orange hoverable animated slideInLeft">
                    <h4 class="custom-card-heading">Haves</h4>
                    <p class="custom-card-content-center"><i class="material-icons custom-card-icon">business_center</i></p>
                </div>
            </a>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4">
            <a href="@Url.Action("Items", "Items", new { userName = Model.Nickname, type= "Want" })">
                <div class="card custom-card-red hoverable animated slideInLeft">
                    <h4 class="custom-card-heading">Wants</h4>
                    <p class="custom-card-content-center"><i class="material-icons custom-card-icon">search</i></p>
                </div>
            </a>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4">
            <div class="card custom-card-purple hoverable animated slideInRight">
                <h4 class="custom-card-heading">Ratings</h4>
                <!--<p class="custom-card-content-center"><i class="material-icons custom-card-icon">thumbs_up_down</i></p>-->
                <p class="custom-card-content-center"><i class="material-icons custom-card-icon">star_border</i></p>
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4">
            <a href="@Url.Action("List", "Trade")">
                <div class="card custom-card-yellow hoverable animated slideInRight">
                    <h4 class="custom-card-heading">Pending Trades</h4>
                    <p class="custom-card-content-center"><i class="material-icons custom-card-icon">compare_arrows</i></p>
                </div>
            </a>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4">
            <div class="card custom-card-green hoverable animated slideInRight">
                <h4 class="custom-card-heading">Trade History</h4>
                <p class="custom-card-content-center"><i class="material-icons custom-card-icon">access_time</i></p>
            </div>
        </div>
    </div><!--end row -->
    }
    
    @*Trader will not see this on their own page*@
    @if (User.Identity.Name != Model.Nickname || User.IsInRole("Admin"))
    {
        <!-- TODO: Add Wants and needs to these lists dynamically. May require using a partial view. -->
        <div class="row">
            <div class="col-md-6">
                <ul class="collection with-header">
                    <li class="collection-header list-header"><h5>Haves</h5></li>
                    <li class="collection-item">Thing 1</li>
                    <li class="collection-item">Thing 2</li>
                    <li class="collection-item">Thing 3</li>
                    <li class="collection-item">Thing 4</li>
                </ul>
            </div>
            <div class="col-md-6">
                <ul class="collection with-header">
                    <li class="collection-header list-header"><h5>Wants</h5></li>
                    <li class="collection-item">Thing 1</li>
                    <li class="collection-item">Thing 2</li>
                    <li class="collection-item">Thing 3</li>
                    <li class="collection-item">Thing 4</li>
                </ul>
            </div>
        </div>  
    }
</div>
